name: Convert Python to C# and Create PR

on:
  push:
    branches: [ main ]
    paths:
      - '**.py'  # This will only trigger on .py file changes

env:
  PYTHON_VERSION: '3.10'
  MODEL_NAME: 'lmstudio-community/Mistral-7B-Instruct-v0.3-GGUF'

jobs:
  convert_and_pr:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Python repo
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
      
    - name: Get commit message
      run: |
        echo "ðŸ“œ Retrieving commit message for SHA: ${{ github.sha }}"
        COMMIT_MESSAGE=$(git log --format=%B -n 1 "${{ github.sha }}")
        {
          echo "COMMIT_MESSAGE<<EOF"
          echo "$COMMIT_MESSAGE"
          echo "EOF"
        } >> "$GITHUB_ENV"
        echo "âœ… Commit message retrieved and stored in environment variable"

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Cache Python dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Print content of changed file
      run: |
        echo "ðŸ“„ Printing content of changed file(s):"
        git diff-tree --no-commit-id --name-only -r ${{ github.sha }} | grep '\.py$' | while read file; do
          echo "File: $file"
          echo "=========================="
          cat "$file"
          echo "=========================="
          echo ""
        done

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install transformers torch sentencepiece

    - name: Download Mistral 7B v0.3 model
      env:
        HF_TOKEN: ${{ secrets.HF_TOKEN }}
      run: |
        python -c "from transformers import AutoTokenizer, AutoModelForCausalLM; tokenizer = AutoTokenizer.from_pretrained('${{ env.MODEL_NAME }}', token='${{ secrets.HF_TOKEN }}'); model = AutoModelForCausalLM.from_pretrained('${{ env.MODEL_NAME }}', token='${{ secrets.HF_TOKEN }}')"
        echo "âœ… Model downloaded successfully"