name: Convert Python to C# and Create PR

on:
  push:
    branches: [ main ]
    paths:
      - '**.py'  # This will only trigger on .py file changes

env:
  PYTHON_VERSION: '3.10'
  MODEL_NAME: 'NickLamb/OpenROAD-8B-Instruct'

jobs:
  convert_and_pr:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Python repo
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
      
    - name: Get commit message
      run: |
        echo "ðŸ“œ Retrieving commit message for SHA: ${{ github.sha }}"
        COMMIT_MESSAGE=$(git log --format=%B -n 1 "${{ github.sha }}")
        {
          echo "COMMIT_MESSAGE<<EOF"
          echo "$COMMIT_MESSAGE"
          echo "EOF"
        } >> "$GITHUB_ENV"
        echo "âœ… Commit message retrieved and stored in environment variable"

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Cache Python dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Print content of changed file
      run: |
        echo "ðŸ“„ Printing content of changed file(s):"
        git diff-tree --no-commit-id --name-only -r ${{ github.sha }} | grep '\.py$' | while read file; do
          echo "File: $file"
          echo "=========================="
          cat "$file"
          echo "=========================="
          echo ""
        done

    - name: Install dependencies
      run: |
        echo "ðŸ”§ Installing required Python packages..."
        python -m pip install --upgrade pip
        pip install instructlab gitpython
        echo "âœ… Dependencies installed successfully"
        pip list
        echo "ðŸ“¦ Above is the list of installed packages"

    - name: Clone and copy config.yaml
      run: |
        echo "ðŸ”„ Cloning config repository and copying config.yaml..."
        git clone "https://github.com/nicklamb97/instructlab-config.git" temp_config
        cp temp_config/config.yaml "$GITHUB_WORKSPACE/config.yaml"
        rm -rf temp_config
        echo "âœ… config.yaml copied to root directory: $GITHUB_WORKSPACE/config.yaml"

    - name: Download model
      env:
        HF_TOKEN: ${{ secrets.HF_TOKEN }}
      run: |
        echo "ðŸ“¥ Downloading OpenROAD-8B-Instruct model..."
        HF_TOKEN="$HF_TOKEN" ilab model download --repository=${{ env.MODEL_NAME }} --filename=OpenROAD-8B-Instruct.Q4_K_M.gguf
        echo "âœ… Model downloaded successfully"
        echo "MODEL_DOWNLOADED=true" >> "$GITHUB_ENV"

    - name: Start InstructLab server and convert Python to C#
      if: env.MODEL_DOWNLOADED == 'true'
      run: |
        # Create a named pipe for communication
        mkfifo serverpipe

        # Start the server in the background, redirecting output to the pipe
        ilab serve > serverpipe 2>&1 &
        SERVER_PID=$!

        # Wait for the server to start (look for a specific message in the output)
        while read line; do
          echo "$line"
          if [[ $line == *"Server started successfully"* ]]; then
            break
          fi
        done < serverpipe &

        # Give the server a moment to fully initialize
        sleep 10

        # Perform the conversion
        mkdir -p converted_files
        git diff-tree --no-commit-id --name-only -r ${{ github.sha }} | grep '\.py$' | while read file; do
          echo "Converting $file to C#"
          python_code=$(cat "$file")
          output_file="converted_files/$(basename "${file%.py}.cs")"
          
          csharp_code=$(ilab chat --prompt "Convert the following Python code to C#:
        Python code:
        $python_code
        C# code:")
          
          echo "$csharp_code" > "$output_file"
          echo "Converted $file to $output_file"
        done

        # Stop the server
        kill $SERVER_PID
        wait $SERVER_PID

        # Clean up the named pipe
        rm serverpipe

    - name: Checkout C# repo
      uses: actions/checkout@v3
      with:
        repository: nicklamb97/csharp
        path: csharp_repo
        token: ${{ secrets.PAT_TOKEN }}

    - name: Copy converted files and create PR
      run: |
        cp -r converted_files/* csharp_repo/
        cd csharp_repo
        git config user.name "GitHub Actions Bot"
        git config user.email "<>"
        git add .
        git commit -m "Convert Python to C#: ${{ env.COMMIT_MESSAGE }}"
        git push origin HEAD:auto-convert-python-to-csharp
        
        PR_URL=$(curl -X POST -H "Authorization: token ${{ secrets.PAT_TOKEN }}" \
             -H "Accept: application/vnd.github.v3+json" \
             https://api.github.com/repos/nicklamb97/csharp/pulls \
             -d "{
               \"title\": \"Automated Python to C# Conversion\",
               \"body\": \"This PR contains automatically converted C# code based on the following commit:\\n\\n${{ env.COMMIT_MESSAGE }}\\n\\nPlease review the converted code and merge if appropriate.\",
               \"head\": \"auto-convert-python-to-csharp\",
               \"base\": \"main\"
             }" | jq -r .html_url)
        
        echo "Pull request created: $PR_URL"