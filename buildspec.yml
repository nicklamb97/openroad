version: 0.2

env:
  variables:
    PYTHON_VERSION: "3.10"
    MODEL_NAME: "diegesis/OpenROAD-8B-Instruct"
    MODEL_FILE: "OpenROAD-8B-Instruct.Q4_K_M.gguf"
    HF_TOKEN: ${HF_TOKEN}

phases:
  install:
    runtime-versions:
      python: 3.10
    commands:
      - echo "🔧 Installing required Python packages..."
      - pip install --upgrade pip
      - pip install instructlab gitpython gradio sentence_transformers langchain_community tqdm huggingface_hub pypdf langchain faiss-cpu torch transformers langchain_text_splitters
      - echo "✅ Dependencies installed successfully"
      - pip list
      - echo "📦 Above is the list of installed packages"

  pre_build:
    commands:
      - echo "📥 Downloading ${MODEL_FILE} model..."
      - HF_TOKEN="$HF_TOKEN" ilab model download --repository=${MODEL_NAME} --filename=${MODEL_FILE}
      - echo "✅ Model downloaded successfully"
      - echo "🚀 Starting InstructLab server..."
      - nohup ilab model serve > server.log 2>&1 &
      - echo "⏳ Waiting for server to start..."
      - sleep 20
      - echo "✅ Server started successfully"
      - echo "🚀 Initializing RAG system..."
      - python .github/workflows/rag_system.py
      - echo "✅ RAG system initialized and running"

  build:
    commands:
      - echo "🗂️ Creating directory for converted files..."
      - mkdir -p converted_files
      - echo "✅ Directory created - converted_files"
      - echo "🔍 Finding changed Python files..."
      - git diff-tree --no-commit-id --name-only -r $CODEBUILD_RESOLVED_SOURCE_VERSION | grep '\.py$' | while read file; do
          echo "🐍➡️🔷 Converting $file to C#";
          python_code=$(cat "$file");
          output_file="converted_files/$(basename "${file%.py}.cs")";
          echo "python_code:";
          echo "$python_code";
          echo "🌐 Using ilab model chat for conversion...";
          prompt=$(sed "s/\${python_code}/$python_code/" convert_prompt.txt);
          echo "🚀 Augmenting prompt using RAG system...";
          augmented_prompt=$(python .github/workflows/rag_system.py "$prompt");
          echo "🌐 Using ilab model chat for conversion...";
          csharp_code=$(ilab model chat --max-tokens 30000 -qq "$augmented_prompt" 2>&1);
          echo "$csharp_code" > "$output_file";
          echo "✅ Converted $file to $output_file";
        done

  post_build:
    commands:
      - echo "Build completed on `date`"
